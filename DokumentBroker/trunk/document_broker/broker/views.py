
from django.utils.translation import ugettext as _

from models import DocumentBroker
from utils import authorized, is_valid_login, create_authorization
from utils import get_client_id

import sys

from configuration.models import ClientSystem


def authorize(client_id, password):
    """Authorize client and return control block to be used in subsequent API
    calls."""
    if is_valid_login(client_id, password):
        return create_authorization(client_id, password)
    else:
        raise RuntimeError(_('Authorization failed'))

@authorized
def get_client_systems(user_authentication):
    client_systems = ClientSystem.objects.all()
    return  { c.name : c.uuid for c in client_systems }

@authorized
def generate_document(user_authentication, template_id, fields):
    """Get template from template server and generates document.
    Store document in suitable place and return URL to retrieve it."""
    
    clid = get_client_id(user_authentication)
    broker = DocumentBroker(clid)
    broker.generate_document(template_id, fields)

@authorized
def acknowledge(user_authentication, document):
    """Acknowledge the retrieval of a document generated by a previous
    request. Deletes the generated document, so that it's no more
    available."""
    raise RuntimeError(
            "{0} {1} This has not yet been implemented!".format(
                user_authentication, document))

