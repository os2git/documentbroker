# This Apache configuration file mainly serves as an example of how to set up
# the document broker to work with an Apache server. 

# This should be parametrized as a part of the installation process.
# For the time being, fix paths and soft link into
# /etc/apache2/sites-available (on Debian-like systems).


WSGIPythonPath /home/carstena/src/document_broker/document_broker
WSGIPythonPath /home/carstena/src/document_broker/lib/python2.7/site-packages


<VirtualHost *:444>
ServerName document-broker.agger.magenta-aps.dk
ServerAlias *.document-broker.agger.magenta-aps.dk
WSGIDaemonProcess document_broker
WSGIProcessGroup document_broker

ErrorLog /var/log/document_broker/broker/error.log
CustomLog /var/log/document_broker/broker/access.log combined

Alias /media /home/carstena/src/document_broker/document_broker/site-media
<Directory home/carstena/src/document_broker/document_broker/site-media>
Options -Indexes
Order deny,allow
Allow from all
</Directory>

Alias /static/ /var/www/static/

WSGIScriptAlias / /home/carstena/src/document_broker/document_broker/document_broker/wsgi.py

<Directory /home/carstena/src/document_broker/document_broker/document_broker>
<Files wsgi.py>
Order deny,allow
Allow from all
</Files>
</Directory>

SSLEngine on

SSLCertificateFile    /etc/ssl/private/document-broker.agger.magenta-aps.dk.crt
SSLCertificateKeyFile /etc/ssl/private/document-broker.agger.magenta-aps.dk.key
SSLCACertificateFile  /etc/ssl/private/ca.crt

# Require valid certificate from client
SSLVerifyClient optional
# FakeBasicAuth... if cert is good, auth is granted.
SSLOptions +FakeBasicAuth +ExportCertData +StdEnvVars

SSLVerifyDepth 1

SSLCARevocationFile /etc/ssl/private/ca.crl

<Location /broker-xml>

SSLVerifyClient require

SSLRequire ( %{SSL_CIPHER} !~ m/^(EXP|NULL)-/ and %{SSL_CLIENT_S_DN_O} eq "Magenta" )
# So client certificate is REQUIRED, must be issued by our own CA and must not
# be revoked.
</Location>

</VirtualHost>

